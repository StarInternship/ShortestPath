@{
    ViewBag.Title = "Home";
}

<div class="jumbotron">
    <h2>ShortWay</h2>
    <p class="lead">Easily find paths in directed and weighted graphs</p>

    <span class="badge badge-light">Graph Properties</span>

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Graph name</span>
        </div>
        <input type="text" class="form-control" placeholder="choose" aria-label="Graph Name" aria-describedby="basic-addon2" list="graphs_list" id="graph_name">
        <div class="input-group-append" id="import_button">
            <button class="btn btn-outline-info" type="button" disabled>
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Loading...
            </button>
        </div>
        <span id="main_graph_wrapper" style="margin-left: 0.5%">
            <button class="btn btn-outline-danger" type="button" disabled>
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Loading...
            </button>
        </span>
    </div>

    <span class="badge badge-light">Search Properties</span>

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Source</span>
        </div>
        <input type="text" placeholder="choose" class="form-control" list="nodes_list" style="max-width: 10%" id="source_node">

        <div class="input-group-prepend" style="margin-left:0.5%">
            <span class="input-group-text">Destination</span>
        </div>
        <input type="text" placeholder="choose" class="form-control" list="nodes_list" style="max-width: 10%" id="destination_node">

        <div class="input-group-prepend" style="margin-left:0.5%">
            <span class="input-group-text">Max Distance</span>
        </div>
        <input type="number" value="2" min="1" max="7" step="1" id="max_distance" style="padding:0.5%">

        <div class="btn-group btn-group-toggle" data-toggle="buttons" style="margin-left:0.5%">
            <label class="btn btn-outline-success active">
                <input type="radio" name="search_type" id="all_paths" autocomplete="off" checked value="all_paths"> All Paths
            </label>
            <label class="btn btn-outline-success">
                <input type="radio" name="search_type" id="shortest_paths" autocomplete="off" value="shortest_paths"> Shortest Paths
            </label>
        </div>

        <button type="button" class="btn btn-outline-secondary" onclick="search()" style="margin-left:0.5%" id="search_button" disabled>Search</button>
    </div>
    <div id="graph-container"></div>
</div>

<datalist id="nodes_list"></datalist>
<datalist id="graphs_list"></datalist>

@section scripts {
    <script>
        const defaultNodeColor = 'yellow';
        const defaultEdgeColor = 'black';
        const inPathNodeColor = 'red';
        const inPathEdgeColor = "green";
        var ogma;
        var currentSubgraph;
        var showingPath = false;

        $(document).ready(() => {
            getGraphList();
        });

        function getGraphList() {
            $.ajax({
                url: '/home/getGraphsList',
                method: 'post'
            }).done(result => {
                var list = result.List;
                $('#graphs_list').html('');
                $.each(list, (index, graphName) => $('#graphs_list').append('<option value="' + graphName + '">' + graphName + '</option>'));
                $('#import_button').html(
                    '<button type="button" class="btn btn-outline-info" onclick="importGraph()">Import Graph</button>'
                );
                $('#main_graph_wrapper').html(
                    '<button type="button" class="btn btn-outline-danger" onclick="showMainGraph()" disabled id="main_graph_button">Show Main Graph</button>'
                );
            });
        }


        function importGraph() {
            var graphName = $('#graph_name').val();

            $.ajax({
                url: '/home/importGraph',
                method: 'post',
                data: {
                    graphName: graphName
                }
            }).done(graph => {
                showingPath = false;
                $('#main_graph_button').attr('disabled', false);
                $('#search_button').attr('disabled', false);

                var g = { nodes: [], edges: [] };
                $('#nodes_list').html('');
                $.each(graph.nodes, (index, node) => {
                    g.nodes.push({
                        id: node.id,
                        attributes: {
                            x: node.attributes.x,
                            y: node.attributes.y,
                            text: node.attributes.text,
                            radius: 10,
                            color: defaultNodeColor
                        }
                    });
                    $('#nodes_list').append('<option value="' + node.attributes.text + '">' + node.attributes.text + '</option>');
                });

                $.each(graph.edges, (index, edge) => {
                    g.edges.push({
                        id: edge.id,
                        source: edge.source,
                        target: edge.target,
                        attributes: {
                            text: edge.attributes.text,
                            width: 3,
                            color: defaultEdgeColor,
                            shape: {
                                type: 'line',
                                style: 'plain',
                                head: 'arrow',
                                tail: null
                            }
                        }
                    });
                });

                ogma = new Ogma({
                    graph: g,
                    container: 'graph-container'
                });

                currentSubgraph = { nodes: [], edges: [] };
            });
        }

        function showMainGraph() {
            if (showingPath) {
                showingPath = false;
                $.each(currentSubgraph.nodes, (index, node) => {
                    ogma.getNode(node.id).setAttributes({ color: defaultNodeColor })
                });
                $.each(currentSubgraph.edges, (index, edge) => {
                    ogma.getEdge(edge.id).setAttributes({ color: defaultEdgeColor })
                });
            }
        }

        function search() {
            var source = $('#source_node').val();
            var destination = $('#destination_node').val();
            var maxDistance = $('#max_distance').val();
            var findAllPaths = $("input[name='search_type']:checked").val() == 'all_paths';

            if (showingPath) {
                showMainGraph();
            }

            $.ajax({
                url: '/home/search',
                method: 'post',
                data: {
                    source: source,
                    destination: destination,
                    maxDistance: maxDistance,
                    findAllPaths: findAllPaths
                }
            }).done(subgraph => {
                showingPath = true;
                currentSubgraph = subgraph;
                $.each(currentSubgraph.nodes, (index, node) => {
                    ogma.getNode(node.id).setAttributes({ color: inPathNodeColor })
                    console.log(node.id);
                });
                console.log('edges');
                $.each(currentSubgraph.edges, (index, edge) => {
                    ogma.getEdge(edge.id).setAttributes({ color: inPathEdgeColor })
                    console.log(edge.id);
                });
            });
        }
    </script>
}