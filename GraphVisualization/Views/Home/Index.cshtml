@{
    ViewBag.Title = "Home";
}

<div class="jumbotron">
    <h2>ShortWay</h2>
    <p class="lead">Easily find paths in directed and weighted graphs</p>

    <span class="badge badge-light">Graph Properties</span>

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Graph name</span>
        </div>
        <input type="text" class="form-control" placeholder="choose" aria-label="Graph Name" aria-describedby="basic-addon2" list="graphs_list" style="max-width: 15%" id="graph_name">
        <div class="input-group-append" id="import_button">
            <button class="btn btn-outline-info" type="button" disabled>
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Loading...
            </button>
        </div>
        <span id="main_graph_button" style="margin-left: 0.5%">
            <button class="btn btn-outline-danger" type="button" disabled>
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Loading...
            </button>
        </span>
    </div>

    <span class="badge badge-light">Search Properties</span>

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Source</span>
        </div>
        <input type="text" placeholder="choose" class="form-control" list="nodes_list" style="max-width: 10%" id="source_node">

        <div class="input-group-prepend" style="margin-left:0.5%">
            <span class="input-group-text">Destination</span>
        </div>
        <input type="text" placeholder="choose" class="form-control" list="nodes_list" style="max-width: 10%" id="destination_node">

        <div class="input-group-prepend" style="margin-left:0.5%">
            <span class="input-group-text">Max Distance</span>
        </div>
        <input type="number" value="2" min="1" max="7" step="1" id="max_distance" style="padding:0.5%">

        <div class="btn-group btn-group-toggle" data-toggle="buttons" style="margin-left:0.5%">
            <label class="btn btn-outline-success active">
                <input type="radio" name="options" id="all_paths" autocomplete="off" checked> All Paths
            </label>
            <label class="btn btn-outline-success">
                <input type="radio" name="options" id="shortest_paths" autocomplete="off"> Shortest Paths
            </label>
        </div>

        <button type="button" class="btn btn-outline-secondary" onclick="search()" style="margin-left:0.5%">Search</button>
    </div>
    <div id="graph-container"></div>
</div>

<datalist id="nodes_list"></datalist>
<datalist id="graphs_list"></datalist>

@section scripts {
    <script>
        $(document).ready(() => {
            getGraphList();

            var g = randomGraph(10, 50);
            var ogma = new Ogma({
                graph: g,
                container: 'graph-container'
            });

            ogma.addEdges([{ source: 'n0', target: 'n0' }, { source: 'n0', target: 'n0' }]);
            //ogma.export.json({
            //    pretty: true
            //}).then(function () {
            //    console.log('Graph exported.')
            //});
        });

        function getGraphList() {
            $.ajax({
                url: '/home/getGraphsList',
                type: 'GET'
            }).done(result => {
                var list = result.list;
                $('#graphs_list').html('');
                $.each(list, (index, value) => $('#graphs_list').append('<option value="' + value + '">' + value + '</option>'));
                $('#import_button').html(
                    '<button type="button" class="btn btn-outline-info" onclick="importGraph()">Import Graph</button>'
                );
                $('#main_graph_button').html(
                    '<button type="button" class="btn btn-outline-danger" onclick="showMainGraph()">Show Main Graph</button>'
                );
            });
        }


        function importGraph() {
            var graphName = $('#graph_name').val();

            $.ajax({
                url: '/home/importGraph',
                type: 'GET',
                data: {
                    graphName: graphName
                }
            }).done(graph => {
                new Ogma({
                    graph: graph,
                    container: 'graph-container'
                });
            });
        }

        function showMainGraph() {

        }

        function search() {

        }

        //function loadGraph(s) {
        //    var ogma = new Ogma({
        //        container: 'graph-container'
        //    });

        //    ogma.parse.jsonFromUrl('../../files/' + s).then(function (graph) {
        //        ogma.setGraph(graph).then(
        //        ogma.view.locateGraph();
        //        console.log('import done');
        //    });

        //    return ogma;
        //}

        function randomGraph(N, E) {
            var g = { nodes: [], edges: [] };
            for (var i = 0; i < N; i++) {
                g.nodes.push({
                    id: 'n' + i,
                    attributes: {
                        x: Math.random() * 1000,
                        y: Math.random() * 1000,
                        text: 'n' + i,
                        radius: 5 + 10 * Math.random()
                    }
                });
            }
            for (var i = 0; i < E; i++) {
                g.edges.push({
                    id: 'e' + i,
                    source: 'n' + (Math.random() * N | 0),
                    target: 'n' + (Math.random() * N | 0),
                    attributes: { text: 'edge' + i }
                });
            }
            return g;
        }
    </script>
}